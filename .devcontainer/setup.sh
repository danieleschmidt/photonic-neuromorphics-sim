#!/bin/bash\nset -e\n\necho \"🚀 Setting up Photonic Neuromorphics Development Environment...\"\n\n# Create virtual environment\necho \"📦 Creating Python virtual environment...\"\npython3 -m venv /opt/venv\nsource /opt/venv/bin/activate\n\n# Upgrade pip\necho \"⬆️ Upgrading pip...\"\npip install --upgrade pip wheel setuptools\n\n# Install Python dependencies\necho \"📚 Installing Python dependencies...\"\nif [ -f \"requirements-dev.txt\" ]; then\n    pip install -r requirements-dev.txt\nfi\n\nif [ -f \"requirements.txt\" ]; then\n    pip install -r requirements.txt\nfi\n\n# Install project in development mode\necho \"🔧 Installing project in development mode...\"\nif [ -f \"pyproject.toml\" ]; then\n    pip install -e .\nfi\n\n# Install additional development tools\necho \"🛠️ Installing development tools...\"\npip install \\\n    black \\\n    isort \\\n    pylint \\\n    mypy \\\n    pre-commit \\\n    pytest \\\n    pytest-cov \\\n    pytest-xdist \\\n    jupyterlab \\\n    ipykernel \\\n    matplotlib \\\n    seaborn\n\n# Setup pre-commit hooks\necho \"🪝 Setting up pre-commit hooks...\"\nif [ -f \".pre-commit-config.yaml\" ]; then\n    pre-commit install\n    pre-commit install --hook-type commit-msg\nfi\n\n# Create Jupyter kernel\necho \"📓 Setting up Jupyter kernel...\"\npython -m ipykernel install --user --name photonic-neuro --display-name \"Photonic Neuromorphics\"\n\n# Install system dependencies for photonic simulation\necho \"🔬 Installing system dependencies...\"\nsudo apt-get update\nsudo apt-get install -y \\\n    build-essential \\\n    gfortran \\\n    libopenblas-dev \\\n    liblapack-dev \\\n    libfftw3-dev \\\n    libhdf5-dev \\\n    ngspice \\\n    gtkwave \\\n    graphviz\n\n# Download and setup photonic simulation tools\necho \"🌊 Setting up photonic simulation tools...\"\nmkdir -p /opt/photonic-tools\n\n# Setup environment variables\necho \"🌍 Setting up environment variables...\"\necho 'export PATH=\"/opt/venv/bin:$PATH\"' >> ~/.bashrc\necho 'export PYTHONPATH=\"/workspaces/photonic-neuromorphics-sim/src:$PYTHONPATH\"' >> ~/.bashrc\necho 'export PHOTONIC_TOOLS_PATH=\"/opt/photonic-tools\"' >> ~/.bashrc\n\n# Create useful aliases\necho \"⚡ Creating useful aliases...\"\necho 'alias pytest=\"python -m pytest\"' >> ~/.bashrc\necho 'alias black=\"python -m black\"' >> ~/.bashrc\necho 'alias isort=\"python -m isort\"' >> ~/.bashrc\necho 'alias pylint=\"python -m pylint\"' >> ~/.bashrc\necho 'alias mypy=\"python -m mypy\"' >> ~/.bashrc\necho 'alias jupyter=\"jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root\"' >> ~/.bashrc\n\n# Create development directories\necho \"📁 Creating development directories...\"\nmkdir -p \\\n    examples/outputs \\\n    tests/fixtures \\\n    docs/assets \\\n    simulation_data \\\n    layouts\n\n# Set permissions\necho \"🔒 Setting permissions...\"\nchmod +x .devcontainer/setup.sh\nchown -R vscode:vscode /opt/venv\n\necho \"✅ Development environment setup complete!\"\necho \"🎉 You can now start developing with:\"\necho \"   - Python environment: /opt/venv/bin/python\"\necho \"   - Jupyter Lab: jupyter lab\"\necho \"   - Run tests: pytest\"\necho \"   - Format code: black .\"\necho \"   - Lint code: pylint src/\"\n\necho \"📋 Next steps:\"\necho \"   1. Run 'source ~/.bashrc' to load aliases\"\necho \"   2. Run 'pytest' to verify setup\"\necho \"   3. Run 'jupyter lab' to start Jupyter Lab\"\necho \"   4. Check 'make help' for available commands\"\n\n# Activate virtual environment for future sessions\necho \"source /opt/venv/bin/activate\" >> ~/.bashrc