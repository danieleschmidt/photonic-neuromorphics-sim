# Promtail configuration for photonic neuromorphics log collection
server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Photonic simulation logs
  - job_name: photonic-simulation
    static_configs:
      - targets:
          - localhost
        labels:
          job: photonic-simulation
          component: simulation
          __path__: /var/log/photonic/photonic_sim.log

  # Error logs
  - job_name: photonic-errors
    static_configs:
      - targets:
          - localhost
        labels:
          job: photonic-errors
          component: error-tracking
          severity: error
          __path__: /var/log/photonic/errors.log

  # Performance logs
  - job_name: photonic-performance
    static_configs:
      - targets:
          - localhost
        labels:
          job: photonic-performance
          component: performance
          __path__: /var/log/photonic/performance.log

  # JSON structured logs
  - job_name: photonic-json
    static_configs:
      - targets:
          - localhost
        labels:
          job: photonic-json
          component: structured-logs
          format: json
          __path__: /var/log/photonic/photonic_sim.json
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            name: name
            module: module
            line: line
            message: message
      - timestamp:
          source: timestamp
          format: '2006-01-02T15:04:05'
      - labels:
          level:
          name:
          module:

  # Container logs
  - job_name: containers
    static_configs:
      - targets:
          - localhost
        labels:
          job: containerlogs
          component: docker
          __path__: /var/lib/docker/containers/*/*log
    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            attrs:
      - json:
          source: attrs
          expressions:
            tag:
      - regex:
          source: tag
          expression: (?P<container_name>(?:[^|])+)
      - timestamp:
          source: time
          format: RFC3339Nano
      - labels:
          stream:
          container_name:
      - output:
          source: output

  # System logs
  - job_name: syslog
    static_configs:
      - targets:
          - localhost
        labels:
          job: syslog
          component: system
          __path__: /var/log/host/syslog
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\S+\s+\d+\s+\d+:\d+:\d+)\s+(?P<hostname>\S+)\s+(?P<service>\S+)(\[(?P<pid>\d+)\])?\:\s*(?P<message>.*)$'
      - timestamp:
          source: timestamp
          format: 'Jan  2 15:04:05'
      - labels:
          hostname:
          service:
          pid:

  # Kubernetes logs (if running in k8s)
  - job_name: kubernetes-pods
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
      - source_labels:
          - __meta_kubernetes_pod_controller_name
        regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
        action: replace
        target_label: __tmp_controller_name
      - source_labels:
          - __meta_kubernetes_pod_label_app_kubernetes_io_name
          - __meta_kubernetes_pod_label_app
          - __tmp_controller_name
          - __meta_kubernetes_pod_name
        regex: ^;*([^;]+)(;.*)?$
        action: replace
        target_label: app
      - source_labels:
          - __meta_kubernetes_pod_label_app_kubernetes_io_instance
          - __meta_kubernetes_pod_label_release
        regex: ^;*([^;]+)(;.*)?$
        action: replace
        target_label: instance
      - source_labels:
          - __meta_kubernetes_pod_label_app_kubernetes_io_component
          - __meta_kubernetes_pod_label_component
        regex: ^;*([^;]+)(;.*)?$
        action: replace
        target_label: component
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: node_name
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: namespace
      - action: replace
        replacement: /var/log/pods/*$1/*.log
        separator: /
        source_labels:
        - __meta_kubernetes_pod_uid
        - __meta_kubernetes_pod_container_name
        target_label: __path__

  # Application-specific log patterns
  - job_name: photonic-neural-network
    static_configs:
      - targets:
          - localhost
        labels:
          job: neural-network
          component: ml
          __path__: /var/log/photonic/neural_*.log
    pipeline_stages:
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2}'
          max_wait_time: 3s
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2})\s+-\s+(?P<level>\S+)\s+-\s+(?P<logger>\S+)\s+-\s+(?P<message>.*)$'
      - timestamp:
          source: timestamp
          format: '2006-01-02 15:04:05'
      - labels:
          level:
          logger:

  # RTL generation logs
  - job_name: photonic-rtl
    static_configs:
      - targets:
          - localhost
        labels:
          job: rtl-generation
          component: hardware
          __path__: /var/log/photonic/rtl_*.log
    pipeline_stages:
      - regex:
          expression: '(?P<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+Z)\s+(?P<level>\w+)\s+(?P<message>.*)'
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level: