apiVersion: v1
kind: Service
metadata:
  name: photonic-sim-service
  namespace: photonic-neuromorphics
  labels:
    app: photonic-sim
    service: photonic-sim
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
spec:
  type: LoadBalancer
  selector:
    app: photonic-sim
  ports:
  - name: http
    port: 80
    targetPort: 8080
    protocol: TCP
  - name: https
    port: 443
    targetPort: 8443
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800

---
apiVersion: v1
kind: Service
metadata:
  name: photonic-sim-headless
  namespace: photonic-neuromorphics
  labels:
    app: photonic-sim
    service: photonic-sim-headless
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: photonic-sim
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: https
    port: 8443
    targetPort: 8443
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: photonic-neuromorphics
  labels:
    app: redis
    service: redis
spec:
  type: ClusterIP
  selector:
    app: redis
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
    protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: photonic-neuromorphics
  labels:
    app: postgres
    service: postgres
spec:
  type: ClusterIP
  selector:
    app: postgres
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
    protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: photonic-neuromorphics
  labels:
    app: prometheus
    service: prometheus
spec:
  type: ClusterIP
  selector:
    app: prometheus
  ports:
  - name: web
    port: 9090
    targetPort: 9090
    protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: photonic-neuromorphics
  labels:
    app: grafana
    service: grafana
spec:
  type: ClusterIP
  selector:
    app: grafana
  ports:
  - name: web
    port: 3000
    targetPort: 3000
    protocol: TCP